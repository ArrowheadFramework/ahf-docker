= node-bonjour =

= Usage =

== Two local containers ==

[Optional] Remove the Docker networks.

<pre>docker network rm mcast_net</pre>
[Optional] Create the networks.

<pre>docker network create \
            -d macvlan \
            --subnet=192.168.0.0/24 \
            --gateway=192.168.0.1 \
            -o parent=wlp58s0 \
            mcast_net</pre>
Build the images.

<pre>docker build --tag node-bonjour-server core/
docker build --tag node-bonjour-client client/</pre>
[Optional] Disable packet forwarding.

<pre>sudo sysctl net.ipv4.conf.all.forwarding=0</pre>
Run the containers.

<pre>SERVER_ADDRESS=127.0.0.2
[ -n &quot;SERVER_ADDRESS&quot; ] &amp;&amp; \
docker run \
       --rm \
       --network mcast_net \
       --ip 192.168.0.121 \
       --env SERVICE_NAME=&quot;sd1&quot; \
       --env SERVICE_TYPE=&quot;http&quot; \
       --env SERVICE_PORT=8080 \
       --env SERVICE_PATH=&quot;/simpleservicediscovery&quot; \
       --env PUBLISH_HOST=&quot;glassfish.docker.ahf&quot; \
       --env PUBLISH_IP=&quot;$SERVER_ADDRESS&quot; \
       node-bonjour-server
docker run \
       --rm \
       --network mcast_net \
       --ip 192.168.0.122 \
       --env TIMEOUT=&quot;5&quot; \
       node-bonjour-client</pre>
[Optional] Re-enable packet forwarding.

<pre>sudo sysctl net.ipv4.conf.all.forwarding=1</pre>
== Two resin devices ==

[Optional] Remove the Docker networks.

<pre>docker -H tcp://resin1.local:2375 network rm mcast_net
docker -H tcp://resin2.local:2375 network rm mcast_net</pre>
[Optional] Create the networks.

<pre>docker -H tcp://resin1.local:2375 network create \
                         -d macvlan \
                         --subnet=192.168.0.0/24 \
                         --gateway=192.168.0.1 \
                         -o parent=eth0 \
                         mcast_net
docker -H tcp://resin2.local:2375 network create \
                         -d macvlan \
                         --subnet=192.168.0.0/24 \
                         --gateway=192.168.0.1 \
                         -o parent=eth0 \
                         mcast_net</pre>
Build the images.

<pre>docker -H tcp://resin1.local:2375 build \
                    --tag node-bonjour-server core/
docker -H tcp://resin2.local:2375 build \
                    --tag node-bonjour-client client/</pre>
Run the containers.

<pre>SERVER_ADDRESS=$(ping resin1.local -c 1 | sed -n 1p | cut -d&quot;(&quot; -f2 | cut -d&quot;)&quot; -f1)
[ -n &quot;SERVER_ADDRESS&quot; ] &amp;&amp; \
docker -H &quot;tcp://$SERVER_ADDRESS:2375&quot; run \
                   --rm \
                   --network mcast_net \
                   --ip 192.168.0.121 \
                   --env SERVICE_NAME=&quot;sd1&quot; \
                   --env SERVICE_TYPE=&quot;http&quot; \
                   --env SERVICE_PORT=8080 \
                   --env SERVICE_PATH=&quot;/simpleservicediscovery&quot; \
                   --env PUBLISH_HOST=&quot;glassfish.docker.ahf&quot; \
                   --env PUBLISH_IP=&quot;$SERVER_ADDRESS&quot; \
                   node-bonjour-server
docker -H tcp://resin2.local:2375 run \
                   --rm \
                   --network mcast_net \
                   --ip 192.168.0.122 \
                   --env TIMEOUT=&quot;5&quot; \
                   node-bonjour-client</pre>
