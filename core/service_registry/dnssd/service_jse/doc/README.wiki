= service_jse =

This directory holds a container for running the service registry for the Arrowhead Framework V3.2 core services. Specifically, it contains the version which uses DNS-SD (a pre-configured server can be found at <code>../bind</code>).

== Instructions ==

=== Running locally ===

Build this container by running the following command from this directory.

<pre>docker build --tag ahf-sr-dnssd .</pre>
If you are running a container with a DNS-SD server prepared for Arrowhead 3.2, such as the one located in <code>bind</code> and that container is connected to a Docker network named, for example, <code>ahf</code>. You can run this container as follows:

<pre>docker run --rm --network ahf --name ahf-sr-dnssd ahf-sr-dnssd</pre>
== Database ==

While this container may run without depending on any databases, one may be used for logging.

Also, when starting the container, the current version attempts to load a database which is not used. This results in an exception which has no effect on the application, so you may ignore it or uncomment the corresponding <code>app.properties</code> entries pointing to any available JDBC connection.

== Tests ==

These tests assume that the service registry is located at <code>sr.docker.ahf</code>. To have your operating system recognize this hostname, you may modify your hosts file or use DNS resolution. See [[#Helpful-commands|Helpful commands]] for an example on modifying the hosts file.

=== Publish ===

=== Un-publish ===

=== Query ===

== Helpful commands ==

Get the IP address of the container (where <code>ahf-service-registry-mysql</code> is the name of the container):

<pre>docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' \
    ahf-sr-dnssd</pre>
Update or add a hosts entry with the container address:

<pre># Configuration (modify as needed
sr_hostname=&quot;sr.docker.ahf&quot;
sr_container_name=&quot;ahf-sr-dnssd&quot;

# Get current container address
sr_address=$(docker inspect -f \
    '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' \
    &quot;$sr_container_name&quot;)

# Comment out any previous entries for that host
sudo sed -Ei &quot;s/(^[1-9].*$sr_hostname)/#\1/&quot; /etc/hosts

# Add new host entry
echo &quot;$sr_address $sr_hostname&quot; | sudo tee -a /etc/hosts

# Verify
cat /etc/hosts</pre>
== Environment variables ==

=== <code>$DB_ADDRESS</code> ===

=== <code>$KEYSTORE</code> ===

=== <code>$KEYSTOREPASS</code> ===

=== <code>$KEYPASS</code> ===

=== <code>$TRUSTSTORE</code> ===

=== <code>$TRUSTSTOREPASS</code> ===

=== <code>$BASE_URI</code> ===

=== <code>$BASE_URI_SECURED</code> ===

=== <code>$DB_USER</code> ===

=== <code>$DB_PASSWORD</code> ===

=== <code>$DB_ADDRESS</code> ===

=== <code>$PING_TIMEOUT</code> ===

=== <code>$PING_SCHEDULED</code> ===

=== <code>$PING_INTERVAL</code> ===

=== <code>$TSIG_NAME</code> ===

=== <code>$TSIG_KEY</code> ===

=== <code>$TSIG_ALGORITHM</code> ===

=== <code>$DNS_IP</code> ===

=== <code>$DNS_PORT</code> ===

=== <code>$LOG4J_ROOTLOGGER</code> ===

=== <code>$LOG4J_APPENDER_DB</code> ===

=== <code>$LOG4J_APPENDER_DB_DRIVER</code> ===

=== <code>$LOG4J_APPENDER_DB_URL</code> ===

=== <code>$LOG4J_APPENDER_DB_USER</code> ===

=== <code>$LOG4J_APPENDER_DB_PASSWORD</code> ===

=== <code>$LOG4J_APPENDER_DB_SQL</code> ===

=== <code>$LOG4J_APPENDER_DB_LAYOUT</code> ===

=== <code>$LOG4J_LOGGER_ORG_HIBERNATE</code> ===

