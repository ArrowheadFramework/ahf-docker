
{
    "swagger":"2.0",
    "info":{
        "version":"4.0-lw",
        "title":"Arrowhead 4.0 Core",
        "description":"This describes the API for the Arrowhead 4.0 core services, specifically meant for the dockerized \"lightweight\" version. You can find more information at the [Arrowhead Framework wiki](https://forge.soa4d.org/plugins/mediawiki/wiki/arrowhead-f/index.php/Arrowhead_Framework_Wiki)",
        "contact": {
            "email":"info@arrowhead.eu"
        }
    },
    "host":"localhost:8440",
    "basePath":"/",
    "schemes":[
        "http",
        "https"
    ],
    "tags":[
        {
            "name":"gsd_poll"
        },
        {
            "name":"icn_proposal"
        },
        {
            "name":"intracloud"
        },
        {
            "name":"mgmt"
        },
        {
            "name":"orchestration"
        },
        {
            "name":"publish"
        },
        {
            "name":"register"
        },
        {
            "name":"remove"
        },
        {
            "name":"store"
        },
        {
            "name":"subscription"
        },
        {
            "name":"token"
        }
    ],
    "paths":{
        "/authorization":{
            "get":{
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "text/plain"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"string"
                        }
                    }
                }
            }
        },
        "/authorization/intracloud":{
            "put":{
                "description":"Checks whether the consumer System can use a Service from a list of provider Systems.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/IntraCloudAuthRequest"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/IntraCloudAuthResponse"
                        }
                    }
                },
                "tags":[
                    "intracloud"
                ]
            }
        },
        "/authorization/mgmt":{
            "get":{
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "text/plain"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"string"
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            }
        },
        "/authorization/mgmt/intercloud":{
            "get":{
                "description":"Returns all the InterCloud authorization rights from the database.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/InterCloudAuthorization"
                            }
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            },
            "post":{
                "description":"Adds a new Cloud and its consumable Services to the database.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/InterCloudAuthEntry"
                        }
                    }
                ],
                "responses":{
                    "201":{
                        "description":"Created",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/InterCloudAuthorization"
                            }
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            }
        },
        "/authorization/mgmt/intercloud/operator/{operator}/cloudname/{cloudName}":{
            "get":{
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"string",
                        "name":"cloudName",
                        "in":"path",
                        "required":true
                    },
                    {
                        "type":"string",
                        "name":"operator",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/InterCloudAuthorization"
                            }
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            },
            "delete":{
                "description":"Deletes the authorization rights of the Cloud.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"string",
                        "name":"cloudName",
                        "in":"path",
                        "required":true
                    },
                    {
                        "type":"string",
                        "name":"operator",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        }
                    },
                    "204":{
                        "description":"No Content",
                        "headers":{
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            }
        },
        "/authorization/mgmt/intercloud/operator/{operator}/cloudname/{cloudName}/services":{
            "get":{
                "description":"Returns the list of consumable Services of a Cloud.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"string",
                        "name":"cloudName",
                        "in":"path",
                        "required":true
                    },
                    {
                        "type":"string",
                        "name":"operator",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/ArrowheadService"
                            }
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            }
        },
        "/authorization/mgmt/intercloud/servicedef/{serviceDefinition}":{
            "get":{
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"string",
                        "name":"serviceDefinition",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/InterCloudAuthorization"
                            }
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            }
        },
        "/authorization/mgmt/intercloud/{id}":{
            "delete":{
                "description":"Deletes the InterCloudAuthorization entry with the id specified by the path parameter. Returns 200 if the delete is successful, 204 (no content)\n if the entry was not in the database to begin with.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"integer",
                        "name":"id",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        }
                    },
                    "204":{
                        "description":"No Content",
                        "headers":{
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            }
        },
        "/authorization/mgmt/intracloud":{
            "get":{
                "description":"Returns all the IntraCloud authorization rights from the database.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/IntraCloudAuthorization"
                            }
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            },
            "post":{
                "description":"Creates relations between local Systems, defining the consumable services between Systems. (Not bidirectional.) OneToMany relation between\n consumer and providers, OneToMany relation between consumer and services.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/IntraCloudAuthEntry"
                        }
                    }
                ],
                "responses":{
                    "201":{
                        "description":"Created",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/IntraCloudAuthorization"
                            }
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            }
        },
        "/authorization/mgmt/intracloud/servicedef/{serviceDefinition}":{
            "get":{
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"string",
                        "name":"serviceDefinition",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/IntraCloudAuthorization"
                            }
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            }
        },
        "/authorization/mgmt/intracloud/systemname/{systemName}":{
            "get":{
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"string",
                        "name":"systemName",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/IntraCloudAuthorization"
                            }
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            },
            "delete":{
                "description":"Deletes all the authorization right relations where the given System is the consumer/provider (decided by query parameter).",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"string",
                        "name":"systemName",
                        "in":"path",
                        "required":true
                    },
                    {
                        "type":"boolean",
                        "name":"provider_side",
                        "in":"query",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        }
                    },
                    "204":{
                        "description":"No Content",
                        "headers":{
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            }
        },
        "/authorization/mgmt/intracloud/systemname/{systemName}/services":{
            "get":{
                "description":"Returns the list of consumable Services of a System.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"string",
                        "name":"systemName",
                        "in":"path",
                        "required":true
                    },
                    {
                        "type":"boolean",
                        "name":"provider_side",
                        "in":"query",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/ArrowheadService"
                            }
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            }
        },
        "/authorization/mgmt/intracloud/{id}":{
            "delete":{
                "description":"Deletes the IntraCloudAuthorization entry with the id specified by the path parameter. Returns 200 if the delete is successful, 204 (no content)\n if the entry was not in the database to begin with.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"integer",
                        "name":"id",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        }
                    },
                    "204":{
                        "description":"No Content",
                        "headers":{
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            }
        },
        "/authorization/token":{
            "put":{
                "description":"Generates ArrowheadTokens for each consumer/service/provider trio",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/TokenGenerationRequest"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/TokenGenerationResponse"
                        }
                    }
                },
                "tags":[
                    "token"
                ]
            }
        },
        "/eventhandler":{
            "get":{
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "text/plain"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"string"
                        }
                    }
                }
            }
        },
        "/eventhandler/publish":{
            "post":{
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/PublishEvent"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        }
                    }
                },
                "tags":[
                    "publish"
                ]
            }
        },
        "/eventhandler/subscription":{
            "put":{
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/EventFilter"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        }
                    },
                    "204":{
                        "description":"No Content",
                        "headers":{
                        }
                    }
                },
                "tags":[
                    "subscription"
                ]
            },
            "post":{
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/EventFilter"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/EventFilter"
                        }
                    }
                },
                "tags":[
                    "subscription"
                ]
            }
        },
        "/eventhandler/subscription/type/{eventType}/consumer/{consumerName}":{
            "delete":{
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"string",
                        "name":"consumerName",
                        "in":"path",
                        "required":true
                    },
                    {
                        "type":"string",
                        "name":"eventType",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        }
                    },
                    "204":{
                        "description":"No Content",
                        "headers":{
                        }
                    }
                },
                "tags":[
                    "subscription"
                ]
            }
        },
        "/gatekeeper":{
            "get":{
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "text/plain"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"string"
                        }
                    }
                }
            }
        },
        "/gatekeeper/gsd_poll":{
            "put":{
                "description":"This function represents the provider-side of GlobalServiceDiscovery, where the GateKeeper of the provider Cloud sends back its information if\n the Authorization and Service Registry polling yields positive results.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/GSDPoll"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/GSDAnswer"
                        }
                    }
                },
                "tags":[
                    "gsd_poll"
                ]
            }
        },
        "/gatekeeper/icn_proposal":{
            "put":{
                "description":"This function represents the provider-side of InterCloudNegotiations, where the Gatekeeper (after an Orchestration process) sends information\n about the provider System. (SSL secured)",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/ICNProposal"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/ICNEnd"
                        }
                    }
                },
                "tags":[
                    "icn_proposal"
                ]
            }
        },
        "/gatekeeper/mgmt":{
            "get":{
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "text/plain"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"string"
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            }
        },
        "/gatekeeper/mgmt/brokers":{
            "get":{
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/Broker"
                            }
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            },
            "put":{
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/Broker"
                        }
                    }
                ],
                "responses":{
                    "202":{
                        "description":"Accepted",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/Broker"
                        }
                    },
                    "204":{
                        "description":"No Content",
                        "headers":{
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            },
            "post":{
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/Broker"
                            }
                        }
                    }
                ],
                "responses":{
                    "201":{
                        "description":"Created",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/Broker"
                            }
                        }
                    },
                    "204":{
                        "description":"No Content",
                        "headers":{
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            }
        },
        "/gatekeeper/mgmt/brokers/address/{address}":{
            "get":{
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"string",
                        "name":"address",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/Broker"
                            }
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            }
        },
        "/gatekeeper/mgmt/brokers/address/{address}/port/{port}":{
            "get":{
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"string",
                        "name":"address",
                        "in":"path",
                        "required":true
                    },
                    {
                        "type":"integer",
                        "name":"port",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/Broker"
                            }
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            }
        },
        "/gatekeeper/mgmt/brokers/brokername/{brokerName}":{
            "get":{
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"string",
                        "name":"brokerName",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/Broker"
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            },
            "delete":{
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"string",
                        "name":"brokerName",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        }
                    },
                    "204":{
                        "description":"No Content",
                        "headers":{
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            }
        },
        "/gatekeeper/mgmt/neighborhood":{
            "get":{
                "description":"Returns all the Neighbor Clouds from the database.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/NeighborCloud"
                            }
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            },
            "put":{
                "description":"Updates an existing NeighborCloud in the database. Returns 204 (no content) if the specified NeighborCloud was not in the database.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/NeighborCloud"
                        }
                    }
                ],
                "responses":{
                    "202":{
                        "description":"Accepted",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/NeighborCloud"
                        }
                    },
                    "204":{
                        "description":"No Content",
                        "headers":{
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            },
            "post":{
                "description":"Adds a list of NeighborClouds to the database. Elements which would cause DuplicateEntryException or BadPayloadException (caused by missing\n operator, cloudName, address or serviceURI) are being skipped. The returned list only contains the elements which were saved in the process.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/NeighborCloud"
                            }
                        }
                    }
                ],
                "responses":{
                    "201":{
                        "description":"Created",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/NeighborCloud"
                            }
                        }
                    },
                    "204":{
                        "description":"No Content",
                        "headers":{
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            }
        },
        "/gatekeeper/mgmt/neighborhood/operator/{operator}/cloudname/{cloudName}":{
            "get":{
                "description":"Returns a Neighbor Cloud from the database specified by the operator and cloud name.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"string",
                        "name":"cloudName",
                        "in":"path",
                        "required":true
                    },
                    {
                        "type":"string",
                        "name":"operator",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/NeighborCloud"
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            },
            "delete":{
                "description":"Deletes the NeighborCloud from the database specified by the operator and cloud name. Returns 200 if the delete is successful, 204 (no content)\n if the system was not in the database to begin with.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"string",
                        "name":"cloudName",
                        "in":"path",
                        "required":true
                    },
                    {
                        "type":"string",
                        "name":"operator",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        }
                    },
                    "204":{
                        "description":"No Content",
                        "headers":{
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            }
        },
        "/mgmt/store":{
            "get":{
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "text/plain"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"string"
                        }
                    }
                },
                "tags":[
                    "store"
                ]
            },
            "put":{
                "description":"Returns the Orchestration Store entries from the database specified by the consumer (and the service).",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/OrchestrationStoreQuery"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/OrchestrationStore"
                            }
                        }
                    }
                },
                "tags":[
                    "store"
                ]
            },
            "post":{
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/OrchestrationStore"
                            }
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/OrchestrationStore"
                            }
                        }
                    }
                },
                "tags":[
                    "store"
                ]
            }
        },
        "/mgmt/store/all":{
            "get":{
                "description":"Returns all the entries of the Orchestration Store.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/OrchestrationStore"
                            }
                        }
                    }
                },
                "tags":[
                    "store"
                ]
            }
        },
        "/mgmt/store/all_default":{
            "get":{
                "description":"Returns all the default entries of the Orchestration Store.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/OrchestrationStore"
                            }
                        }
                    }
                },
                "tags":[
                    "store"
                ]
            }
        },
        "/mgmt/store/default/{id}":{
            "get":{
                "description":"Toggles the <tt>defaultEntry</tt> boolean for the Orchestration Store entry specified by the id field.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"integer",
                        "name":"id",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/OrchestrationStore"
                        }
                    }
                },
                "tags":[
                    "store"
                ]
            }
        },
        "/mgmt/store/systemname/{systemName}":{
            "delete":{
                "description":"Deletes the Orchestration Store entries from the database specified by the consumer. Returns 200 if the delete is successful, 204 (no content) if\n no matching entries were in the database to begin with.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"string",
                        "name":"systemName",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        }
                    },
                    "204":{
                        "description":"No Content",
                        "headers":{
                        }
                    }
                },
                "tags":[
                    "store"
                ]
            }
        },
        "/mgmt/store/update":{
            "put":{
                "description":"Updates the non-entity fields of an Orchestration Store entry specified by the id field of the payload. Entity fields have their own update\n method in CommonApi.class. (Or delete and then post the modified entry again.)",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/OrchestrationStore"
                        }
                    }
                ],
                "responses":{
                    "202":{
                        "description":"Accepted",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/OrchestrationStore"
                        }
                    }
                },
                "tags":[
                    "store"
                ]
            }
        },
        "/mgmt/store/{id}":{
            "get":{
                "description":"Returns an Orchestration Store entry from the database specified by the database generated id.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"integer",
                        "name":"id",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/OrchestrationStore"
                        }
                    }
                },
                "tags":[
                    "store"
                ]
            },
            "delete":{
                "description":"Deletes the Orchestration Store entry with the id specified by the path parameter. Returns 200 if the delete is successful, 204 (no content) if\n the entry was not in the database to begin with.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"integer",
                        "name":"id",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        }
                    },
                    "204":{
                        "description":"No Content",
                        "headers":{
                        }
                    }
                },
                "tags":[
                    "store"
                ]
            }
        },
        "/orchestrator/mgmt/common":{
            "get":{
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "text/plain"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"string"
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            }
        },
        "/orchestrator/mgmt/common/clouds":{
            "get":{
                "description":"Returns the list of ArrowheadClouds from the database.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/ArrowheadCloud"
                            }
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            },
            "put":{
                "description":"Updates an existing ArrowheadCloud in the database. Returns 204 (no content) if the specified ArrowheadCloud was not in the database.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/ArrowheadCloud"
                        }
                    }
                ],
                "responses":{
                    "202":{
                        "description":"Accepted",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/ArrowheadCloud"
                        }
                    },
                    "204":{
                        "description":"No Content",
                        "headers":{
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            },
            "post":{
                "description":"Adds a list of ArrowheadClouds to the database. Elements which would cause DuplicateEntryException or BadPayloadException (caused by missing\n operator, cloudName, address or serviceURI) are being skipped. The returned list only contains the elements which were saved in the process.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/ArrowheadCloud"
                            }
                        }
                    }
                ],
                "responses":{
                    "201":{
                        "description":"Created",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/ArrowheadCloud"
                            }
                        }
                    },
                    "204":{
                        "description":"No Content",
                        "headers":{
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            }
        },
        "/orchestrator/mgmt/common/clouds/operator/{operator}":{
            "get":{
                "description":"Returns a list of ArrowheadClouds from the database specified by the operator.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"string",
                        "name":"operator",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/ArrowheadCloud"
                            }
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            }
        },
        "/orchestrator/mgmt/common/clouds/operator/{operator}/cloudname/{cloudName}":{
            "get":{
                "description":"Returns an ArrowheadCloud from the database specified by the operator and cloud name.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"string",
                        "name":"cloudName",
                        "in":"path",
                        "required":true
                    },
                    {
                        "type":"string",
                        "name":"operator",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/ArrowheadCloud"
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            },
            "delete":{
                "description":"Deletes the ArrowheadCloud from the database specified by the operator and cloud name. Returns 200 if the delete is successful, 204 (no content)\n if the cloud was not in the database to begin with.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"string",
                        "name":"cloudName",
                        "in":"path",
                        "required":true
                    },
                    {
                        "type":"string",
                        "name":"operator",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        }
                    },
                    "204":{
                        "description":"No Content",
                        "headers":{
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            }
        },
        "/orchestrator/mgmt/common/services":{
            "get":{
                "description":"Returns the list of ArrowheadServices from the database.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/ArrowheadService"
                            }
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            },
            "put":{
                "description":"Updates an existing ArrowheadService in the database. Returns 204 (no content) if the specified ArrowheadService was not in the database.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/ArrowheadService"
                        }
                    }
                ],
                "responses":{
                    "202":{
                        "description":"Accepted",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/ArrowheadService"
                        }
                    },
                    "204":{
                        "description":"No Content",
                        "headers":{
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            },
            "post":{
                "description":"Adds a list of ArrowheadServices to the database. Elements which would cause DuplicateEntryException or BadPayloadException (caused by missing\n serviceDefinition) are being skipped. The returned list only contains the elements which were saved in the process.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/ArrowheadService"
                            }
                        }
                    }
                ],
                "responses":{
                    "201":{
                        "description":"Created",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/ArrowheadService"
                            }
                        }
                    },
                    "204":{
                        "description":"No Content",
                        "headers":{
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            }
        },
        "/orchestrator/mgmt/common/services/servicedef/{serviceDefinition}":{
            "get":{
                "description":"Returns an ArrowheadService from the database specified by the service definition.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"string",
                        "name":"serviceDefinition",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/ArrowheadService"
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            },
            "delete":{
                "description":"Deletes the ArrowheadService from the database specified by the service definition. Returns 200 if the delete is successful, 204 (no content) if\n the service was not in the database to begin with.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"string",
                        "name":"serviceDefinition",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        }
                    },
                    "204":{
                        "description":"No Content",
                        "headers":{
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            }
        },
        "/orchestrator/mgmt/common/systems":{
            "get":{
                "description":"Returns the list of ArrowheadSystems from the database.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/ArrowheadSystem"
                            }
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            },
            "put":{
                "description":"Updates an existing ArrowheadSystem in the database. Returns 204 (no content) if the specified ArrowheadSystem was not in the database.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/ArrowheadSystem"
                        }
                    }
                ],
                "responses":{
                    "202":{
                        "description":"Accepted",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/ArrowheadSystem"
                        }
                    },
                    "204":{
                        "description":"No Content",
                        "headers":{
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            },
            "post":{
                "description":"Adds a list of ArrowheadSystems to the database. Elements which would cause DuplicateEntryException or BadPayloadException (caused by missing\n systemName or address) are being skipped. The returned list only contains the elements which were saved in the process.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/ArrowheadSystem"
                            }
                        }
                    }
                ],
                "responses":{
                    "201":{
                        "description":"Created",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/ArrowheadSystem"
                            }
                        }
                    },
                    "204":{
                        "description":"No Content",
                        "headers":{
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            }
        },
        "/orchestrator/mgmt/common/systems/systemname/{systemName}":{
            "get":{
                "description":"Returns an ArrowheadSystem from the database specified by the system name.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"string",
                        "name":"systemName",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/ArrowheadSystem"
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            },
            "delete":{
                "description":"Deletes the ArrowheadSystem from the database specified by the system name. Returns 200 if the delete is successful, 204 (no content) if the\n system was not in the database to begin with.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"string",
                        "name":"systemName",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        }
                    },
                    "204":{
                        "description":"No Content",
                        "headers":{
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            }
        },
        "/orchestrator/orchestration":{
            "get":{
                "description":"Simple test method to see if the http server where this resource is registered works or not.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "text/plain"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"string"
                        }
                    }
                },
                "tags":[
                    "orchestration"
                ]
            },
            "post":{
                "description":"This method initiates the correct orchestration process determined by orchestration flags in the <tt>ServiceRequestForm</tt>. The returned\n response (can) consists a list of endpoints where the requester System can consume the requested Service.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/ServiceRequestForm"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/OrchestrationResponse"
                        }
                    }
                },
                "tags":[
                    "orchestration"
                ]
            }
        },
        "/orchestrator/orchestration/{systemName}":{
            "get":{
                "description":"Default Store orchestration process offered on a GET request, where the requester only has to send 2 String path parameters.",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"string",
                        "name":"systemName",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/OrchestrationResponse"
                        }
                    }
                },
                "tags":[
                    "orchestration"
                ]
            }
        },
        "/orchestrator/store":{
            "get":{
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "text/plain"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"string"
                        }
                    }
                },
                "tags":[
                    "store"
                ]
            }
        },
        "/orchestrator/store/consumername/{systemName}":{
            "get":{
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"string",
                        "name":"systemName",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/OrchestrationStore"
                            }
                        }
                    }
                },
                "tags":[
                    "store"
                ]
            }
        },
        "/orchestrator/store/consumername/{systemName}/servicedef/{serviceDef}":{
            "get":{
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"string",
                        "name":"serviceDef",
                        "in":"path",
                        "required":true
                    },
                    {
                        "type":"string",
                        "name":"systemName",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/OrchestrationStore"
                            }
                        }
                    }
                },
                "tags":[
                    "store"
                ]
            }
        },
        "/orchestrator/store/query":{
            "get":{
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/OrchestrationStore"
                            }
                        }
                    }
                },
                "tags":[
                    "store"
                ]
            }
        },
        "/orchestrator/store/query/servicedef/{serviceDef}":{
            "get":{
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"string",
                        "name":"serviceDef",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/OrchestrationStore"
                            }
                        }
                    }
                },
                "tags":[
                    "store"
                ]
            }
        },
        "/serviceregistry":{
            "get":{
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "text/plain"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"string"
                        }
                    }
                }
            }
        },
        "/serviceregistry/mgmt":{
            "get":{
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "text/plain"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"string"
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            }
        },
        "/serviceregistry/mgmt/all":{
            "get":{
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/ServiceQueryResult"
                        }
                    },
                    "204":{
                        "description":"No Content",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/ServiceQueryResult"
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            },
            "delete":{
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        }
                    },
                    "204":{
                        "description":"No Content",
                        "headers":{
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            }
        },
        "/serviceregistry/mgmt/servicedef/{serviceDefinition}":{
            "get":{
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"string",
                        "name":"serviceDefinition",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/ServiceRegistryEntry"
                            }
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            }
        },
        "/serviceregistry/mgmt/systemname/{systemName}":{
            "get":{
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"string",
                        "name":"systemName",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/ServiceRegistryEntry"
                            }
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            }
        },
        "/serviceregistry/mgmt/update":{
            "put":{
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/ServiceRegistryEntry"
                        }
                    }
                ],
                "responses":{
                    "202":{
                        "description":"Accepted",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/ServiceRegistryEntry"
                        }
                    }
                },
                "tags":[
                    "mgmt"
                ]
            }
        },
        "/serviceregistry/register":{
            "post":{
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/ServiceRegistryEntry"
                        }
                    }
                ],
                "responses":{
                    "201":{
                        "description":"Created",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/ServiceRegistryEntry"
                        }
                    }
                },
                "tags":[
                    "register"
                ]
            }
        },
        "/serviceregistry/remove":{
            "put":{
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/ServiceRegistryEntry"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        }
                    },
                    "204":{
                        "description":"No Content",
                        "headers":{
                        }
                    }
                },
                "tags":[
                    "remove"
                ]
            }
        }
    },
    "definitions":{
        "ArrowheadCloud":{
            "properties":{
                "address":{
                    "type":"string"
                },
                "authenticationInfo":{
                    "type":"string"
                },
                "cloudName":{
                    "type":"string"
                },
                "gatekeeperServiceURI":{
                    "type":"string"
                },
                "id":{
                    "type":"integer"
                },
                "operator":{
                    "type":"string"
                },
                "port":{
                    "type":"integer"
                }
            }
        },
        "ArrowheadService":{
            "properties":{
                "id":{
                    "type":"integer"
                },
                "interfaces":{
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "serviceDefinition":{
                    "type":"string"
                },
                "serviceMetadata":{
                    "type":"object"
                }
            }
        },
        "ArrowheadSystem":{
            "properties":{
                "address":{
                    "type":"string"
                },
                "authenticationInfo":{
                    "type":"string"
                },
                "id":{
                    "type":"integer"
                },
                "port":{
                    "type":"integer"
                },
                "systemName":{
                    "type":"string"
                }
            }
        },
        "Broker":{
            "properties":{
                "address":{
                    "type":"string"
                },
                "authenticationInfo":{
                    "type":"string"
                },
                "brokerName":{
                    "type":"string"
                },
                "id":{
                    "type":"integer"
                },
                "port":{
                    "type":"integer"
                },
                "secure":{
                    "type":"boolean"
                }
            }
        },
        "Event":{
            "properties":{
                "eventMetadata":{
                    "type":"object"
                },
                "payload":{
                    "type":"string"
                },
                "timestamp":{
                    "type":"object"
                },
                "type":{
                    "type":"string"
                }
            }
        },
        "EventFilter":{
            "properties":{
                "consumer":{
                    "$ref":"#/definitions/ArrowheadSystem"
                },
                "endDate":{
                    "type":"object"
                },
                "eventType":{
                    "type":"string"
                },
                "filterMetadata":{
                    "type":"object"
                },
                "matchMetadata":{
                    "type":"boolean"
                },
                "notifyUri":{
                    "type":"string"
                },
                "port":{
                    "type":"integer"
                },
                "sources":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/ArrowheadSystem"
                    }
                },
                "startDate":{
                    "type":"object"
                }
            }
        },
        "GSDAnswer":{
            "properties":{
                "providerCloud":{
                    "$ref":"#/definitions/ArrowheadCloud"
                },
                "requestedService":{
                    "$ref":"#/definitions/ArrowheadService"
                }
            }
        },
        "GSDPoll":{
            "properties":{
                "registryFlags":{
                    "type":"object"
                },
                "requestedService":{
                    "$ref":"#/definitions/ArrowheadService"
                },
                "requesterCloud":{
                    "$ref":"#/definitions/ArrowheadCloud"
                }
            }
        },
        "GatewayConnectionInfo":{
            "properties":{
                "brokerName":{
                    "type":"string"
                },
                "brokerPort":{
                    "type":"integer"
                },
                "controlQueueName":{
                    "type":"string"
                },
                "gatewayPublicKey":{
                    "type":"string"
                },
                "queueName":{
                    "type":"string"
                }
            }
        },
        "ICNEnd":{
            "properties":{
                "gatewayConnInfo":{
                    "$ref":"#/definitions/GatewayConnectionInfo"
                },
                "orchestrationForm":{
                    "$ref":"#/definitions/OrchestrationForm"
                }
            }
        },
        "ICNProposal":{
            "properties":{
                "gatewayPublicKey":{
                    "type":"string"
                },
                "negotiationFlags":{
                    "type":"object"
                },
                "preferredBrokers":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/Broker"
                    }
                },
                "preferredSystems":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/ArrowheadSystem"
                    }
                },
                "requestedService":{
                    "$ref":"#/definitions/ArrowheadService"
                },
                "requesterCloud":{
                    "$ref":"#/definitions/ArrowheadCloud"
                },
                "requesterSystem":{
                    "$ref":"#/definitions/ArrowheadSystem"
                },
                "timeout":{
                    "type":"integer"
                }
            }
        },
        "InterCloudAuthEntry":{
            "properties":{
                "cloud":{
                    "$ref":"#/definitions/ArrowheadCloud"
                },
                "serviceList":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/ArrowheadService"
                    }
                }
            }
        },
        "InterCloudAuthorization":{
            "properties":{
                "cloud":{
                    "$ref":"#/definitions/ArrowheadCloud"
                },
                "id":{
                    "type":"integer"
                },
                "service":{
                    "$ref":"#/definitions/ArrowheadService"
                }
            }
        },
        "IntraCloudAuthEntry":{
            "properties":{
                "consumer":{
                    "$ref":"#/definitions/ArrowheadSystem"
                },
                "providerList":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/ArrowheadSystem"
                    }
                },
                "serviceList":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/ArrowheadService"
                    }
                }
            }
        },
        "IntraCloudAuthRequest":{
            "properties":{
                "consumer":{
                    "$ref":"#/definitions/ArrowheadSystem"
                },
                "providers":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/ArrowheadSystem"
                    }
                },
                "service":{
                    "$ref":"#/definitions/ArrowheadService"
                }
            }
        },
        "IntraCloudAuthResponse":{
            "properties":{
                "authorizationMap":{
                    "type":"object"
                },
                "valid":{
                    "type":"boolean"
                }
            }
        },
        "IntraCloudAuthorization":{
            "properties":{
                "consumer":{
                    "$ref":"#/definitions/ArrowheadSystem"
                },
                "id":{
                    "type":"integer"
                },
                "provider":{
                    "$ref":"#/definitions/ArrowheadSystem"
                },
                "service":{
                    "$ref":"#/definitions/ArrowheadService"
                }
            }
        },
        "NeighborCloud":{
            "properties":{
                "cloud":{
                    "$ref":"#/definitions/ArrowheadCloud"
                }
            }
        },
        "OrchestrationForm":{
            "properties":{
                "authorizationToken":{
                    "type":"string"
                },
                "instruction":{
                    "type":"string"
                },
                "provider":{
                    "$ref":"#/definitions/ArrowheadSystem"
                },
                "service":{
                    "$ref":"#/definitions/ArrowheadService"
                },
                "serviceURI":{
                    "type":"string"
                },
                "signature":{
                    "type":"string"
                },
                "warnings":{
                    "type":"string",
                    "enum":[
                        "FROM_OTHER_CLOUD",
                        "TTL_EXPIRING",
                        "TTL_UNKNOWN"
                    ]
                }
            }
        },
        "OrchestrationResponse":{
            "properties":{
                "response":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/OrchestrationForm"
                    }
                }
            }
        },
        "OrchestrationStore":{
            "properties":{
                "attributes":{
                    "type":"object"
                },
                "consumer":{
                    "$ref":"#/definitions/ArrowheadSystem"
                },
                "defaultEntry":{
                    "type":"boolean"
                },
                "id":{
                    "type":"integer"
                },
                "instruction":{
                    "type":"string"
                },
                "lastUpdated":{
                    "type":"object"
                },
                "name":{
                    "type":"string"
                },
                "priority":{
                    "type":"integer"
                },
                "providerCloud":{
                    "$ref":"#/definitions/ArrowheadCloud"
                },
                "providerSystem":{
                    "$ref":"#/definitions/ArrowheadSystem"
                },
                "service":{
                    "$ref":"#/definitions/ArrowheadService"
                },
                "serviceURI":{
                    "type":"string"
                }
            }
        },
        "OrchestrationStoreQuery":{
            "properties":{
                "requestedService":{
                    "$ref":"#/definitions/ArrowheadService"
                },
                "requesterSystem":{
                    "$ref":"#/definitions/ArrowheadSystem"
                }
            }
        },
        "PreferredProvider":{
            "properties":{
                "global":{
                    "type":"boolean"
                },
                "local":{
                    "type":"boolean"
                },
                "providerCloud":{
                    "$ref":"#/definitions/ArrowheadCloud"
                },
                "providerSystem":{
                    "$ref":"#/definitions/ArrowheadSystem"
                },
                "valid":{
                    "type":"boolean"
                }
            }
        },
        "PublishEvent":{
            "properties":{
                "deliveryCompleteUri":{
                    "type":"string"
                },
                "event":{
                    "$ref":"#/definitions/Event"
                },
                "source":{
                    "$ref":"#/definitions/ArrowheadSystem"
                }
            }
        },
        "ServiceQueryResult":{
            "properties":{
                "serviceQueryData":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/ServiceRegistryEntry"
                    }
                },
                "valid":{
                    "type":"boolean"
                }
            }
        },
        "ServiceRegistryEntry":{
            "properties":{
                "endOfValidity":{
                    "type":"object"
                },
                "id":{
                    "type":"integer"
                },
                "metadata":{
                    "type":"string"
                },
                "port":{
                    "type":"integer"
                },
                "providedService":{
                    "$ref":"#/definitions/ArrowheadService"
                },
                "provider":{
                    "$ref":"#/definitions/ArrowheadSystem"
                },
                "serviceURI":{
                    "type":"string"
                },
                "ttl":{
                    "type":"integer"
                },
                "udp":{
                    "type":"boolean"
                },
                "version":{
                    "type":"integer"
                }
            }
        },
        "ServiceRequestForm":{
            "properties":{
                "commands":{
                    "type":"object"
                },
                "orchestrationFlags":{
                    "type":"object"
                },
                "preferredProviders":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/PreferredProvider"
                    }
                },
                "requestedQoS":{
                    "type":"object"
                },
                "requestedService":{
                    "$ref":"#/definitions/ArrowheadService"
                },
                "requesterCloud":{
                    "$ref":"#/definitions/ArrowheadCloud"
                },
                "requesterSystem":{
                    "$ref":"#/definitions/ArrowheadSystem"
                }
            }
        },
        "TokenData":{
            "properties":{
                "service":{
                    "$ref":"#/definitions/ArrowheadService"
                },
                "signature":{
                    "type":"string"
                },
                "system":{
                    "$ref":"#/definitions/ArrowheadSystem"
                },
                "token":{
                    "type":"string"
                }
            }
        },
        "TokenGenerationRequest":{
            "properties":{
                "consumer":{
                    "$ref":"#/definitions/ArrowheadSystem"
                },
                "consumerCloud":{
                    "$ref":"#/definitions/ArrowheadCloud"
                },
                "duration":{
                    "type":"integer"
                },
                "providers":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/ArrowheadSystem"
                    }
                },
                "service":{
                    "$ref":"#/definitions/ArrowheadService"
                }
            }
        },
        "TokenGenerationResponse":{
            "properties":{
                "tokenData":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/TokenData"
                    }
                }
            }
        }
    }
}
